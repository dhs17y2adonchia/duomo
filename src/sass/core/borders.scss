@use "../utils2";

@mixin __border-radius-from-range-impl($shorthand, $props, $range, $resolver) {
	$amp: utils2.get-ampersand();

	@include utils2.generate-from-range($shorthand, $props, $range, $resolver);
	#{$amp}#{$shorthand}-full {
		@each $property in $props {
			#{$property}: 9999px;
		}
	}
}

// prettier-ignore
@mixin border-radius-from-range($range, $resolver) {
	@include __border-radius-from-range-impl(
		"rounded",
		(border-radius),
		$range,
		$resolver,
	);
	@include __border-radius-from-range-impl(
		"rounded-tl",
		(border-top-left-radius),
		$range,
		$resolver,
	);
	@include __border-radius-from-range-impl(
		"rounded-t",
		(border-top-left-radius, border-top-right-radius),
		$range,
		$resolver,
	);
	@include __border-radius-from-range-impl(
		"rounded-tr",
		(border-top-right-radius),
		$range,
		$resolver,
	);
	@include __border-radius-from-range-impl(
		"rounded-l",
		(border-top-left-radius, border-bottom-left-radius),
		$range,
		$resolver,
	);
	@include __border-radius-from-range-impl(
		"rounded-r",
		(border-top-right-radius, border-bottom-right-radius),
		$range,
		$resolver,
	);
	@include __border-radius-from-range-impl(
		"rounded-bl",
		(border-bottom-left-radius),
		$range,
		$resolver,
	);
	@include __border-radius-from-range-impl(
		"rounded-b",
		(border-bottom-left-radius, border-bottom-right-radius),
		$range,
		$resolver,
	);
	@include __border-radius-from-range-impl(
		"rounded-br",
		(border-bottom-right-radius),
		$range,
		$resolver,
	);
}

// TODO: Add `border-width`.

// TODO: Possibly move to `border` submodule.
@mixin border-color($map, $alpha-range) {
	@include utils2.generate-colors("bg", background-color, $map, $alpha-range);
}
