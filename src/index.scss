@import "./_tailwind.base.1.x";

@import "./mixins/background-color-from-map";
@import "./mixins/border-radius-from-range";
@import "./mixins/box-shadow-from-named-map";
@import "./mixins/dark-background-color-from-map";
@import "./mixins/display";
@import "./mixins/flex";
@import "./mixins/height-from-range";
@import "./mixins/margin-from-range";
@import "./mixins/max-width-from-map";
@import "./mixins/padding-from-range";
@import "./mixins/pointer-events";
@import "./mixins/position-from-range";
@import "./mixins/width-from-range";
@import "./mixins/z-index-from-range";

@import "./utils/generate-from-map";
@import "./utils/generate-from-range";
@import "./utils/get-dynamic-ampersand";
@import "./utils/safe-functions";
@import "./utils/unit-functions";

@import "./vars";

$separator: "\\:";

@mixin props($breakpoint: "") {
	@include margin-from-range(join(join($-range, auto), $range), rem);
	@include padding-from-range($range, rem);
	@include position-from-range((auto, 0), passthrough);
	@include display;
	@include flex;
	@include width-from-range(join((auto), $extended-range), rem);
	@include max-width-from-map($breakpoint-map, px);
	@include height-from-range(join((auto), $extended-range), rem);
	@if not & {
		@include background-color-from-map($background-color-map, passthrough);
		@include dark-background-color-from-map($background-color-map, passthrough);
	}
	@include border-radius-from-range($border-radius-range, rem);
	@include box-shadow-from-named-map($box-shadow-named-map, passthrough);
	@include z-index-from-range((-50, -40, -30, -20, -10, auto, 0, 10, 20, 30, 40, 50), passthrough);
	@include pointer-events;
}

@at-root {
	@include props;
	@each $key, $value in $breakpoint-map {
		@media (min-width: px($value)) {
			.#{$key} {
				@at-root {
					@include props;
				}
			}
		}
	}
}
