@import "./_tailwind-base-2_0_0-alpha";

@import "./mixins/_border-radius";
@import "./mixins/_box-shadow";
@import "./mixins/_colors";
@import "./mixins/_display";
@import "./mixins/_font-smoothing";
@import "./mixins/_font";
@import "./mixins/_height";
@import "./mixins/_margin";
@import "./mixins/_overflow";
@import "./mixins/_padding";
@import "./mixins/_pointer-events";
@import "./mixins/_position";
@import "./mixins/_stacks";
@import "./mixins/_stagger-width";
@import "./mixins/_width";
@import "./mixins/_z-index";

@import "./utils/conv-functions";
@import "./utils/generate-from-map";
@import "./utils/generate-from-range";
@import "./utils/get-dynamic-ampersand";
@import "./utils/safe-functions";

@import "./_design-tokens";
@import "./_ranges";

$separator: "\\:";

// prettier-ignore
$line-height-map: (
	"1":      1,
	"1\\.05": 1.05,
	"1\\.1":  1.1,
	"1\\.15": 1.15,
	"1\\.2":  1.2,
	"1\\.25": 1.25,
	"1\\.3":  1.3,
	"1\\.35": 1.35,
	"1\\.4":  1.4,
	"1\\.45": 1.45,
	"1\\.5":  1.5,
	"1\\.55": 1.55,
	"1\\.6":  1.6,
	"1\\.65": 1.65,
	"1\\.7":  1.7,
	"1\\.75": 1.75,
	"1\\.8":  1.8,
	"1\\.85": 1.85,
	"1\\.9":  1.9,
	"1\\.95": 1.95,
	"2":      2,
);

$z-index-range: -1, auto, 0, 10, 20, 30, 40, 50;

@mixin custom-props {
	html {
		@include generate-custom-props-from-map($font-family-map);
		@include generate-custom-props-from-map($color-map);
		@include generate-custom-props-from-map($box-shadow-named-map);
		@include generate-custom-props-from-map($timing-function-map);
	}
}

@mixin debugger {
	[data-debug],
	[data-debug] * {
		outline: 2px solid var(--debug-qualified-color, hsla(200, 100%, 50%, 0.25));
		outline-offset: -1px;
	}
}

@mixin props {
	@if not & {
		/* purgecss start ignore */
		@include antialiasing;
		@include custom-props;
		@include debugger;
		/* purgecss end ignore */
	}
	@include display;
	@include stacks-from-range($range, rem);
	@include margin-from-range(join(join($-range, auto), $range), rem);
	@include padding-from-range($range, rem);
	@include position-from-range((auto, 0));
	@include width-from-range(join(auto, $range), rem);
	@include max-width-from-map($breakpoint-map, px);
	@include height-from-range(join(auto, $range), rem);
	@include min-height-from-range(join(auto, 0), px);
	@include stagger-width;
	@include font-style;
	@include font-weight;
	@include font-size-from-range($range, rem);
	@include generate-from-map((line-height), "leading", $line-height-map, passthrough);
	@if not & {
		@include color-from-map((color), "text", $color-map);
		@include color-from-map((background-color), "bg", $color-map);
	}
	@include border-radius-from-range($shorter-range, rem);
	@include box-shadow-from-named-map($box-shadow-named-map);
	@include overflow;
	@include z-index-from-range($z-index-range);
	@include pointer-events;
}

@at-root {
	@include props;
	@each $key, $value in $breakpoint-map {
		@media (min-width: px($value)) {
			.#{$key} {
				@at-root {
					@include props;
				}
			}
		}
	}
}
