@use "sass:list";

// Generates a one-off range.
//
// Ex:
//
// __range_impl(0, 10, 1)
// -> (0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
//
@function __range_impl($lower, $upper, $step: 1) {
	$range: ();
	@while ($upper < $lower and $lower > $upper) or ($upper > $lower and $lower < $upper) {
		$range: list.append($range, $lower, comma);
		$lower: $lower + $step;
	}
	@return $range;
}

// Generates a meta range from sets of one-off range descriptions.
//
// Ex:
//
// meta-range((0, 10, 1), (10, 20, 2))
// -> ( 0,  1,  2,  3,  4,  5,  6,  7,  8,  9,
//     10, 12, 14, 16, 18)
//
@function meta-range($descs...) {
	$meta-range: ();
	@each $desc in $descs {
		@if type-of($desc) == "number" {
			$meta-range: list.join($meta-range, $desc);
		} @else if type-of($desc) == "list" {
			$meta-range: list.join($meta-range, __range-impl(list.nth($desc, 1), list.nth($desc, 2), list.nth($desc, 3)));
		}
	}
	@return $meta-range;
}
