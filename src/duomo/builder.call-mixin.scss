@use "core";

// NOTE: Dart Sass does not support dynamic mixin calls.
// Therefore mixins are statically called using conditions.
//
// https://github.com/sass/sass/issues/626
//
// prettier-ignore
@mixin call-mixin($mixin, $variants...) {
	@if $mixin == "aspect-ratio" { @include core.aspect-ratio($variants...); }
	@if $mixin == "background-color" { @include core.background-color($variants...); }
	@if $mixin == "border-color" { @include core.border-color($variants...); }
	@if $mixin == "border-radius" { @include core.border-radius($variants...); }
	@if $mixin == "border-width" { @include core.border-width($variants...); }
	@if $mixin == "box-shadow" { @include core.box-shadow($variants...); }
	@if $mixin == "color" { @include core.color($variants...); }
	@if $mixin == "container" { @include core.container($variants...); }
	@if $mixin == "directives" { @include core.directives($variants...); }
	@if $mixin == "grid" { @include core.grid($variants...); }
	@if $mixin == "group" { @include core.group($variants...); }
	@if $mixin == "height" { @include core.height($variants...); }
	@if $mixin == "margin" { @include core.margin($variants...); }
	@if $mixin == "max-width" { @include core.max-width($variants...); }
	@if $mixin == "min-height" { @include core.min-height($variants...); }
	@if $mixin == "opacity" { @include core.opacity($variants...); }
	@if $mixin == "overflow" { @include core.overflow($variants...); }
	@if $mixin == "padding" { @include core.padding($variants...); }
	@if $mixin == "pointer-events" { @include core.pointer-events($variants...); }
	@if $mixin == "position" { @include core.position($variants...); }
	@if $mixin == "shape" { @include core.shape($variants...); }
	@if $mixin == "stacks" { @include core.stacks($variants...); }
	@if $mixin == "transform" { @include core.transform($variants...); }
	@if $mixin == "width" { @include core.width($variants...); }
	@if $mixin == "z-index" { @include core.z-index($variants...); }
}
