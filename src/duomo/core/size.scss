@use "../user";
@use "../util";

$__opts: (
	full: 100%,
	screen: 100vh,
);

@mixin width-from-range($range, $resolver) {
	$amp: util.get-ampersand();

	@each $v in $range {
		#{$amp}w-#{$v} {
			width: #{util.resolve($v, $resolver)};
			[class*="hstack"] > & {
				flex-shrink: 0;
			}
		}
	}
	@if not & {
		[class*="hstack"] > [style^="width"],
		[class*="hstack"] > [style*=";width"],
		[class*="hstack"] > [style*="; width"] {
			flex-shrink: 0;
		}
	}

	// prettier-ignore
	@include util.generate-from-map(
		"w",
		(width),
		$__opts,
		none,
	);
}

@mixin max-width-from-breakpoint-map($breakpoint-map) {
	// prettier-ignore
	@include util.generate-from-map(
		"max-w",
		(max-width),
		$breakpoint-map,
		px,
	);
}

@mixin container-from-breakpoint-map($breakpoint-map) {
	@if not & {
		.container {
			width: 100%;
		}
		@each $k, $v in $breakpoint-map {
			@media (min-width: #{util.px($v)}) {
				.#{$k}#{user.$separator}container {
					max-width: #{util.px($v)};
				}
			}
		}
	}
}

@mixin height-from-range($range, $resolver) {
	$amp: util.get-ampersand();

	@each $v in $range {
		#{$amp}h-#{$v} {
			height: #{util.resolve($v, $resolver)};
			[class*="vstack"] > & {
				flex-shrink: 0;
			}
		}
	}
	@if not & {
		[class*="vstack"] > [style^="height"],
		[class*="vstack"] > [style*=";height"],
		[class*="vstack"] > [style*="; height"] {
			flex-shrink: 0;
		}
	}

	// prettier-ignore
	@include util.generate-from-map(
		"h",
		(height),
		$__opts,
		none,
	);
}

@mixin min-height {
	// // prettier-ignore
	// @include util.generate-from-range(
	// 	"min-h",
	// 	(min-height),
	// 	$range,
	// 	$resolver,
	// );

	// prettier-ignore
	@include util.generate-from-map(
		"min-h",
		(min-height),
		$__opts,
		none,
	);
}
