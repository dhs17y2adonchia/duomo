@use "sass:list";
@use "sass:map";

@use "builder.call-mixin" as *;
@use "configuration";
@use "helpers" as *;

@use "meta/custom-props-from-maps" as *;
@use "meta/data-debug-space" as *;
@use "meta/data-debug" as *;
@use "meta/data-line" as *;

@use "preflight/custom-tailwind-base" as *;
@use "preflight/modern-normalize" as *;
@use "preflight/vendored-font-smoothing" as *;

@mixin custom-props {
	// TODO: Can we use `null`?
	$font-placeholder: (
		sans: '""',
		serif: '""',
		mono: '""',
	);
	// prettier-ignore
	@include custom-props-from-maps(
		(shorthand: none, map: $font-placeholder),
		(shorthand: none, map: weights($raw: true)),
		(shorthand: none, map: colors($raw: true)),
		(shorthand: shadow, map: shadows($raw: true)),
		(shorthand: none, map: timings($raw: true)),
		(shorthand: none, map: breakpoints($raw: true)),
	);
}

@at-root {
	@if not configuration.$headless {
		/*! duomo | MIT License | https://github.com/zaydek/duomo */

		/* purgecss start ignore */
		@include modern-normalize;
		@include custom-tailwind-base;
		@include vendored-font-smoothing;
		/* purgecss end ignore */

		@include data-debug;
		@include data-debug-space;
		@include data-line;
		@include custom-props;

		// TODO: Add `take` pattern here.
		@each $mk, $mv in configuration.$variants {
			@if $mk != directives {
				@include call-mixin($mk, var-join(core, take($mv, responsive))...);
			}
		}
		@each $mk, $mv in configuration.$variants {
			@if $mk != directives {
				@if list.index($mv, responsive) {
					@include call-mixin($mk, responsive);
				}
			}
		}
		// NOTE: `directives` must be last.
		@if map.get(configuration.$variants, directives) {
			@include call-mixin(directives, var-join(core, map.get(configuration.$variants, directives))...);
		}
	}
}
