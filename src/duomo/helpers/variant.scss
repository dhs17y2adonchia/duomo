@use "sass:list";
@use "sass:meta";

@use "getters" as *;

@function no-op($selector) {
	@return ".#{$selector}";
}
@function hover($selector) {
	@return ".hover\\:#{$selector}:hover";
}
@function focus($selector) {
	@return ".focus\\:#{$selector}:focus";
}
@function group-hover($selector) {
	@return ".group-hover:hover .group-hover\\:#{$selector}";
}
@function group-focus($selector) {
	@return ".group-focus:focus .group-focus\\:#{$selector}";
}
@function responsive($selector) {
	@return "#{&}#{$selector}";
}

@mixin variants($variants) {
	@content (no-op);
	@each $variant in $variants {
		// prettier-ignore
		@if $variant == hover or $variant == focus or
		$variant == group-hover or $variant == group-focus {
			@content ($variant);
		}
	}
	@if list.index($variants, responsive) {
		@each $key, $n in breakpoints() {
			@media (min-width: #{$n + px}) {
				.#{delimit($key)} {
					@at-root {
						@content (responsive);
					}
				}
			}
		}
	}
}

@function variant($selector, $variant-fn) {
	// NOTE: Use `meta.get-function` because of warning:
	//
	// Deprecation Warning: Passing a string to call() is deprecated and will be illegal
	// in Dart Sass 2.0.0. Use call(get-function(responsive)) instead.
	//
	@return meta.call(meta.get-function($variant-fn), $selector);
}
