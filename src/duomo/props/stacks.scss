@use "../helpers" as *;

@mixin __hstack($range, $reoslver) {
	$amp: get-ampersand();

	@if not & {
		.hstack > * {
			--space: 0;
		}
	}
	#{$amp}hstack {
		display: flex;
		flex-direction: row;
		justify-content: center;
	}
	#{$amp}hstack > * + * {
		margin-top: 0;
		margin-left: var(--space);
	}
	#{$amp}hstack > .spacer:empty,
	#{$amp}hstack > .spacer:empty + * {
		margin-left: 0;
	}
}

@mixin __vstack($range, $reoslver) {
	$amp: get-ampersand();

	@if not & {
		.vstack > * {
			--space: 0;
		}
	}
	#{$amp}vstack {
		display: flex;
		flex-direction: column;
		justify-content: center;
	}
	#{$amp}vstack > * + * {
		margin-left: 0;
		margin-top: var(--space);
	}
	#{$amp}vstack > .spacer:empty,
	#{$amp}vstack > .spacer:empty + * {
		margin-top: 0;
	}
}

@mixin stack-from-range($range, $resolver) {
	$amp: get-ampersand();

	@include __hstack($range, $resolver);
	@include __vstack($range, $resolver);

	#{$amp}stack-stretch {
		align-items: stretch;
	}
	#{$amp}stack-start {
		align-items: flex-start;
	}
	#{$amp}stack-center {
		align-items: center;
	}
	#{$amp}stack-end {
		align-items: flex-end;
	}
	#{$amp}stack-baseline {
		align-items: baseline;
	}

	@if not & {
		.spacer {
			flex: 1 0 var(--space);
		}
		.spacer:first-child,
		.spacer:last-child {
			flex: 1 0 0;
		}
	}

	@each $v in $range {
		#{$amp}space-#{$v} > * {
			--space: #{resolve($v, $resolver)};
		}
	}

	@for $v from -1 through 12 {
		$sign: safe-negative-sign($v);
		#{$amp}#{$sign}order-#{safe-abs($v)} {
			order: $v;
		}
	}
}
